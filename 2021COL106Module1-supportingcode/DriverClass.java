import HelperClasses.Pair;

class DriverClass
{
    public static void main(String args[]) throws Exception
    {
        // CRF

        CRF CRF_obj = new CRF(5);
        Pair<String, String> p = CRF_obj.FindCollDeterministic();
        
        try {
            if(p==null || !CRF_obj.Fn(p.first).equals(CRF_obj.Fn(p.second)))
                throw new AssertionError();
            System.out.println("CRF ran successfully!");
        }
        catch (AssertionError e) {
            System.err.println("CRF failed!");
        }

        CRF_obj.FindCollRandomized();


        // Signature

        String message = "Message of variable length";
        SignatureKeys keys = Signature.keygen();
        String sk = keys.get_sk();
        String vk = keys.get_vk();

        String output_sign = Signature.Sign(message, sk);

        boolean output_verify = Signature.Verify(message, vk, output_sign);

        try {
            if(!output_verify)
                throw new AssertionError();
            System.out.println("Signature-Verification ran successfully!");
            System.out.println("\n[DISCLAIMER]");
            System.out.println("|- The Signature-Verification test included in the starter code is a basic test which feeds the signature generated by your Sign() function to your Verify() function.");
            System.out.println("|- Extensive testing will be performed for both Sign() and Verify() independently while grading your submission.");
        }
        catch (AssertionError e) {
            System.err.println("Signature-Verification Failed!");
        }
    }
}